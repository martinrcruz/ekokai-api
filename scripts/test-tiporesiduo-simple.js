const axios = require('axios');

const API_BASE = 'http://localhost:8080/api';

// Funci√≥n para probar las funcionalidades sin autenticaci√≥n (solo para verificar que los endpoints responden)
async function probarEndpoints() {
  console.log('üöÄ Probando endpoints de tipos de residuo...\n');
  
  try {
    // 1. Probar GET (deber√≠a devolver 401 sin token)
    console.log('üìã Probando GET /tipos-residuo...');
    try {
      const response = await axios.get(`${API_BASE}/tipos-residuo`);
      console.log('‚úÖ GET funcionando:', response.status);
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('‚úÖ GET requiere autenticaci√≥n (correcto)');
      } else {
        console.log('‚ùå GET error:', error.response?.status || error.message);
      }
    }
    
    // 2. Probar POST (deber√≠a devolver 401 sin token)
    console.log('\n‚ûï Probando POST /tipos-residuo...');
    try {
      const response = await axios.post(`${API_BASE}/tipos-residuo`, {
        nombre: 'Test',
        descripcion: 'Test descripci√≥n',
        tokensPorKg: 10
      });
      console.log('‚úÖ POST funcionando:', response.status);
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('‚úÖ POST requiere autenticaci√≥n (correcto)');
      } else {
        console.log('‚ùå POST error:', error.response?.status || error.message);
      }
    }
    
    // 3. Probar PUT (deber√≠a devolver 401 sin token)
    console.log('\n‚úèÔ∏è Probando PUT /tipos-residuo/test-id...');
    try {
      const response = await axios.put(`${API_BASE}/tipos-residuo/test-id`, {
        nombre: 'Test Actualizado',
        descripcion: 'Test descripci√≥n actualizada',
        tokensPorKg: 20
      });
      console.log('‚úÖ PUT funcionando:', response.status);
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('‚úÖ PUT requiere autenticaci√≥n (correcto)');
      } else {
        console.log('‚ùå PUT error:', error.response?.status || error.message);
      }
    }
    
    // 4. Probar DELETE (deber√≠a devolver 401 sin token)
    console.log('\nüóëÔ∏è Probando DELETE /tipos-residuo/test-id...');
    try {
      const response = await axios.delete(`${API_BASE}/tipos-residuo/test-id`);
      console.log('‚úÖ DELETE funcionando:', response.status);
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('‚úÖ DELETE requiere autenticaci√≥n (correcto)');
      } else {
        console.log('‚ùå DELETE error:', error.response?.status || error.message);
      }
    }
    
    console.log('\n‚úÖ Todas las pruebas completadas. Los endpoints est√°n respondiendo correctamente.');
    
  } catch (error) {
    console.error('‚ùå Error general:', error.message);
  }
}

// Ejecutar pruebas
probarEndpoints().catch(console.error); 